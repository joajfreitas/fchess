var searchIndex = new Map(JSON.parse('[["book",{"t":"H","n":["main"],"q":[[0,"book"]],"i":"`","f":"{{}b}","D":"`","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}],["cli",{"t":"FNNONNNNNNNNNNHNNNNN","n":["Args","augment_args","augment_args_for_update","book","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":[[0,"cli"],[20,"clap_builder::builder::command"],[21,"core::option"],[22,"core::fmt"],[23,"clap_builder::parser::matches::arg_matches"],[24,"clap_builder"],[25,"core::result"],[26,"clap_builder::util::id"],[27,"rustyline"],[28,"core::any"]],"i":"`d000000000000`00000","f":"`{bb}0{df}{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{}b}0{{{h{d}}{h{jl}}}n}{cc{}}{{{h{A`}}}{{Ad{dAb}}}}{{{h{jA`}}}{{Ad{dAb}}}}{{}{{f{Af}}}}{{}c{}}{{}{{Aj{Ah}}}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{hAl}{{{h{jd}}{h{A`}}}{{Ad{AhAb}}}}{{{h{jd}}{h{jA`}}}{{Ad{AhAb}}}}","D":"h","p":[[5,"Command",20],[5,"Args",0],[6,"Option",21,null,1],[1,"reference",null,null,1],[0,"mut"],[5,"Formatter",22],[8,"Result",22],[5,"ArgMatches",23],[8,"Error",24],[6,"Result",25,null,1],[5,"Id",26],[1,"unit"],[8,"Result",27],[5,"TypeId",28]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABAABQAAAAAAAgABAAUABAALAAIADwAFAA==","P":[[4,"T"],[6,""],[9,"T"],[10,""],[13,"U"],[14,""],[15,"U,T"],[16,"U"],[17,""]]}],["fchess",{"t":"PFFFFFGFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Black","Board","Book","Move","MoveGenerator","MoveSet","Side","Solver","Square","White","apply","attack","best_move","bishop_attacks","bitand","bitor","bitxor","black_pawn_attacks","borrow","","","","","","","","borrow_mut","","","","","","","","checkmate","clone","","","","","","","clone_into","","","","","","","clone_to_uninit","","","","","","","cmp","","contains","default","","","","eq","","","","","fmt","","","","","","","","","","from","","","","","","","","from_algebraic","","from_basic_board","from_fen","from_filename","from_full_algebraic","from_index","from_rank_file","from_san","generate_moves","generate_moves_for_piece","get_best_move","get_dst","get_enpassant","get_file","get_full_move_clock","get_half_move_clock","get_index","get_promotion","get_rank","get_src","get_target","get_turn","into","","","","","","","","into_iter","","king_attacks","knight_attacks","mov","new","","","","","not","occupied","partial_cmp","","piece","piece_at","rook_attacks","scoped","set_castling_black_long","set_castling_black_short","set_castling_white_long","set_castling_white_short","set_enpassant","set_file","set_full_move_clock","set_half_move_clock","set_piece","set_promotion","set_rank","set_target","set_turn","shift","src","to_algebraic","","to_owned","","","","","","","to_string","","","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","white_pawn_attacks","with_promotion","zobryst_hash"],"q":[[0,"fchess"],[189,"fchess::board"],[190,"fchess::moves"],[191,"core::option"],[192,"fchess::move_generator"],[193,"fchess::moveset"],[194,"fchess::solver"],[195,"fchess::square"],[196,"fchess::side"],[197,"core::cmp"],[198,"core::fmt"],[199,"fchess::book"],[200,"alloc::vec"],[201,"alloc::string"],[202,"core::result"],[203,"core::any"]],"i":"Ah````````0bjn1l002Bf43f263A`2651374066513740651374065137401036574613706651133740265137401066210015521606601011626513740635536513476103656666660666101633106513740613265137402651374026513740516","f":"``````````{{{d{b}}f}{{h{b}}}}{{{d{j}}{d{b}}{d{`}}}l}{{{d{n}}{d{b}}}{{h{f}}}}`{{ll}c{}}{{ll}c{}}{{ll}c{}}`{d{{d{c}}}{}}0000000{{{d{Ad}}}{{d{Adc}}}{}}0000000{{{d{b}}}Af}{{{d{b}}}b}{{{d{j}}}j}{{{d{f}}}f}{{{d{l}}}l}{{{d{Ah}}}Ah}{{{d{n}}}n}{{{d{A`}}}A`}{{d{d{Adc}}}Aj{}}000000{{dAl}Aj}000000{{{d{f}}{d{f}}}An}{{{d{A`}}{d{A`}}}An}{{{d{l}}{d{f}}}Af}{{}b}{{}j}{{}Ah}{{}n}{{{d{b}}{d{b}}}Af}{{{d{f}}{d{f}}}Af}{{{d{l}}{d{l}}}Af}{{{d{Ah}}{d{Ah}}}Af}{{{d{A`}}{d{A`}}}Af}{{{d{b}}{d{AdB`}}}Bb}0{{{d{j}}{d{AdB`}}}Bb}{{{d{f}}{d{AdB`}}}Bb}0{{{d{l}}{d{AdB`}}}Bb}0{{{d{Ah}}{d{AdB`}}}Bb}{{{d{n}}{d{AdB`}}}Bb}{{{d{A`}}{d{AdB`}}}Bb}{cc{}}0000000{{{d{Bd}}}{{h{f}}}}{{{d{Bd}}}{{h{A`}}}}{{}b}{{{d{Bd}}}b}{{{d{Bd}}}Bf}4{AlA`}{{AlAl}A`}{{{d{Bd}}{d{b}}}{{h{f}}}}{{{d{j}}{d{b}}}{{Bh{l}}}}{{{d{j}}{d{b}}A`}{{h{l}}}}{{{d{Bf}}{d{b}}}{{h{f}}}}{{{d{f}}}A`}{{{d{b}}}{{h{A`}}}}{{{d{A`}}}Al}{{{d{b}}}Al}01{{{d{f}}}{{h{`}}}}24{{{d{f}}}{{h{A`}}}}{{{d{b}}}Ah}{{}c{}}0000000{{{d{b}}}c{}}{{{d{l}}}c{}}``{lAb}{{}b}{{}j}{{A`A`}f}`{{}n}{Ahc{}}`{{{d{f}}{d{f}}}{{h{An}}}}{{{d{A`}}{d{A`}}}{{h{An}}}}`{{{d{b}}A`}{{h{`}}}}``{{{d{Adb}}Af}Aj}000{{{d{Adb}}{h{A`}}}Aj}{{{d{AdA`}}Al}Aj}{{{d{Adb}}Al}Aj}0`{{{d{Adf}}{h{`}}}Aj}2{{{d{Adf}}{h{A`}}}Aj}{{{d{Adb}}Ah}Aj}{{{d{l}}Bj}l}{lA`}{{{d{f}}}Bl}{A`Bl}{dc{}}000000{dBl}00{c{{Bn{e}}}{}{}}0000000{{}{{Bn{c}}}{}}0000000{dC`}0000000``{{{d{b}}{d{Ah}}}Ab}","D":"Bj","p":[[5,"Board",0,189],[1,"reference",null,null,1],[5,"Move",0,190],[6,"Option",191,null,1],[5,"MoveGenerator",0,192],[5,"MoveSet",0,193],[5,"Solver",0,194],[5,"Square",0,195],[1,"u64"],[0,"mut"],[1,"bool"],[6,"Side",0,196],[1,"unit"],[1,"u8"],[6,"Ordering",197],[5,"Formatter",198],[8,"Result",198],[1,"str"],[5,"Book",0,199],[5,"Vec",200],[1,"i8"],[5,"String",201],[6,"Result",202,null,1],[5,"TypeId",203]],"r":[[0,196],[1,189],[2,199],[3,190],[4,192],[5,193],[6,196],[7,194],[8,195],[9,196],[10,189],[11,192],[12,194],[13,192],[14,193],[15,193],[16,193],[17,192],[18,199],[19,189],[20,192],[21,190],[22,193],[23,196],[24,194],[25,195],[26,199],[27,189],[28,192],[29,190],[30,193],[31,196],[32,194],[33,195],[34,189],[35,189],[36,192],[37,190],[38,193],[39,196],[40,194],[41,195],[42,189],[43,192],[44,190],[45,193],[46,196],[47,194],[48,195],[49,189],[50,192],[51,190],[52,193],[53,196],[54,194],[55,195],[56,190],[57,195],[58,193],[59,189],[60,192],[61,196],[62,194],[63,189],[64,190],[65,193],[66,196],[67,195],[68,189],[69,189],[70,192],[71,190],[72,190],[73,193],[74,193],[75,196],[76,194],[77,195],[78,199],[79,189],[80,192],[81,190],[82,193],[83,196],[84,194],[85,195],[86,190],[87,195],[88,189],[89,189],[90,199],[91,190],[92,195],[93,195],[94,190],[95,192],[96,192],[97,199],[98,190],[99,189],[100,195],[101,189],[102,189],[103,195],[104,190],[105,195],[106,190],[107,190],[108,189],[109,199],[110,189],[111,192],[112,190],[113,193],[114,196],[115,194],[116,195],[117,189],[118,193],[119,192],[120,192],[121,193],[122,189],[123,192],[124,190],[125,193],[126,194],[127,196],[128,189],[129,190],[130,195],[131,193],[132,189],[133,192],[134,189],[135,189],[136,189],[137,189],[138,189],[139,189],[140,195],[141,189],[142,189],[143,189],[144,190],[145,195],[146,190],[147,189],[148,193],[149,193],[150,190],[151,195],[152,189],[153,192],[154,190],[155,193],[156,196],[157,194],[158,195],[159,189],[160,190],[161,193],[162,199],[163,189],[164,192],[165,190],[166,193],[167,196],[168,194],[169,195],[170,199],[171,189],[172,192],[173,190],[174,193],[175,196],[176,194],[177,195],[178,199],[179,189],[180,192],[181,190],[182,193],[183,196],[184,194],[185,195],[186,192],[187,190],[188,189]],"b":[[68,"impl-Debug-for-Board"],[69,"impl-Display-for-Board"],[71,"impl-Debug-for-Move"],[72,"impl-Display-for-Move"],[73,"impl-Debug-for-MoveSet"],[74,"impl-Display-for-MoveSet"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKgABQABAAAABQABAAgARgBXABYAdgBHAA==","P":[[14,"BitAnd::Output"],[15,"BitOr::Output"],[16,"BitXor::Output"],[17,""],[18,"T"],[34,""],[42,"T"],[49,""],[78,"T"],[86,""],[109,"U"],[117,"IntoIterator::IntoIter"],[119,""],[127,"Not::Output"],[128,""],[152,"T"],[159,""],[162,"U,T"],[170,"U"],[178,""]]}],["fen_diagram",{"t":"H","n":["main"],"q":[[0,"fen_diagram"]],"i":"`","f":"{{}b}","D":"`","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}],["test_apply_move",{"t":"FFFNNNNNNNONOOONNNNOONNNOOHONNNOOOONOOOOONNNNNNNNN","n":["SuitResult","TestCase","TestResult","borrow","","","borrow_mut","","","check","description","deserialize","expected_board","expected_fen","failed_tests","fmt","from","","","id","","into","","","lan","","main","mov","new","","push_test","result","result_board","san","","serialize","start_fen","starting_board","successful_tests","tests","total_tests","try_from","","","try_into","","","type_id","",""],"q":[[0,"test_apply_move"],[50,"fchess::board"],[51,"alloc::string"],[52,"core::result"],[53,"serde::de"],[54,"core::fmt"],[55,"serde_json::error"],[56,"fchess::moves"],[57,"serde::ser"],[58,"alloc::vec"],[59,"core::any"]],"i":"```AdAbj21010010202101021010`12121110001222210210210","f":"```{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{f}}{b{f}}}h}{jl}{c{{n{j}}}A`}{Abf}2{AdAf}{{{b{j}}{b{dAh}}}Aj}{cc{}}00{Abl}6{{}c{}}0017{{}{{An{Al}}}}{AbB`}{{}Ad}{{{b{Bb}}{b{f}}{b{f}}{b{f}}{b{Bb}}{b{Bb}}B`}Ab}{{{b{dAd}}Ab}Al}{Abh};7={{{b{j}}c}nBd}><;{AdBf}<{c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{bBh}00","D":"l","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Board",50],[1,"bool"],[5,"TestCase",0],[5,"String",51],[6,"Result",52,null,1],[10,"Deserializer",53],[5,"TestResult",0],[5,"SuitResult",0],[1,"u32"],[5,"Formatter",54],[8,"Result",54],[1,"unit"],[8,"Result",55],[5,"Move",56],[1,"str"],[10,"Serializer",57],[5,"Vec",58],[5,"TypeId",59]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACwAAwAAABAAFAABABkAGQA=","P":[[3,"T"],[9,""],[11,"__D"],[12,""],[16,"T"],[19,""],[21,"U"],[24,""],[35,"__S"],[36,""],[41,"U,T"],[44,"U"],[47,""]]}],["test_movegen",{"t":"FFNNNNNNNNNNONONNNONNHONNOONOCONNNNNNNNNKFNNONNNNNNNNMOOMONNN","n":["MovegenTestResult","TestCase","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","description","deserialize","fen","fmt","from","","id","into","","main","moves","new","result","","resulting_moves","serialize","square","test_common","testcase","to_owned","","to_string","try_from","","try_into","","type_id","","TestResult","TestSuit","borrow","borrow_mut","failed_tests","finalize","from","get_failed_tests","get_successful_tests","get_total_tests","into","new","push_test","result","successfull_tests","tests","to_string","total_tests","try_from","try_into","type_id"],"q":[[0,"test_movegen"],[40,"test_movegen::test_common"],[61,"alloc::string"],[62,"core::result"],[63,"serde::de"],[64,"core::fmt"],[65,"alloc::vec"],[66,"fchess::moves"],[67,"serde::ser"],[68,"core::option"],[69,"core::any"]],"i":"``fh10101010111110110`1000011`0100101010``Bd0000000000Bh1101111","f":"``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{f}}}f}{{{b{h}}}h}{{b{b{dc}}}j{}}0{{bl}j}0{fn}{c{{A`{f}}}Ab}1{{{b{f}}{b{dAd}}}Af}{cc{}}03{{}c{}}0{{}j}{fAh}{{f{Ah{Aj}}Al}h}{{{b{h}}}Al}{hAl}{hAh}{{{b{f}}c}A`An}{fB`}`{hf}{bc{}}0{{{b{h}}}n}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bBb}0``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{BdBf}{{{b{{Bd{c}}}}}jBh}{cc{}}{{{b{{Bd{c}}}}}BfBh}00{{}c{}}{{}{{Bd{c}}}Bh}{{{b{d{Bd{c}}}}c}jBh}{{{b{Bh}}}Al}7{BdAh}{{{b{Bh}}}n}9>=<","D":"l","p":[[1,"reference",null,null,1],[0,"mut"],[5,"TestCase",0],[5,"MovegenTestResult",0],[1,"unit"],[1,"u8"],[5,"String",61],[6,"Result",62,null,1],[10,"Deserializer",63],[5,"Formatter",64],[8,"Result",64],[5,"Vec",65],[5,"Move",66],[1,"bool"],[10,"Serializer",67],[6,"Option",68,null,1],[5,"TypeId",69],[5,"TestSuit",40],[1,"u32"],[10,"TestResult",40]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADcABQAAABAAEwAAABYAGAAwAAIANAAJAA==","P":[[2,"T"],[6,""],[8,"T"],[10,""],[13,"__D"],[14,""],[16,"T"],[18,""],[19,"U"],[21,""],[27,"__S"],[28,""],[31,"T"],[33,""],[34,"U,T"],[36,"U"],[38,""],[42,"T"],[44,""],[45,"T"],[50,"U"],[51,"T"],[53,""],[58,"U,T"],[59,"U"],[60,""]]}],["uci",{"t":"H","n":["main"],"q":[[0,"uci"],[1,"std::io::error"]],"i":"`","f":"{{}{{d{b}}}}","D":"`","p":[[1,"unit"],[8,"Result",1]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[168,1267,6272,183,1603,2106,210]}