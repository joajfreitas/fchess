var searchIndex = JSON.parse('{\
"book":{"doc":"","t":[5],"n":["main"],"q":["book"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"cli":{"doc":"","t":[5],"n":["main"],"q":["cli"],"d":[""],"i":[0],"f":[[[],1]],"p":[[6,"Result"]]},\
"fchess":{"doc":"","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,10,11,10,11,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,6,17,5,3,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,3,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["bitboard","bitwise","board","book","common","dumb7fill","move_generator","moves","moveset","piece","side","solver","square","Bitboard","BitboardExt","shift","shift","shift_p","shift_p","enable_bit","set_bit","Board","BoardIterator","apply","borrow","borrow","borrow_mut","borrow_mut","checkmate","clone","clone_into","default","eq","equivalent","fmt","fmt","from","from","from_basic_board","from_fen","get_enpassant","get_full_move_clock","get_half_move_clock","get_turn","into","into","into_iter","into_iter","new","next","occupied","piece_at","print_board","scoped","set_castling_black_long","set_castling_black_short","set_castling_white_long","set_castling_white_short","set_enpassant","set_full_move_clock","set_half_move_clock","set_piece","set_turn","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","zobryst_hash","Book","Entry","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from_filename","get_best_move","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","E","N","NE","NW","S","SE","SW","Shift","W","dumb7fill","MoveGenerator","attack","bishop_attacks","black_pawn_attacks","borrow","borrow_mut","clone","clone_into","default","fmt","from","generate_black_pawn_attacks","generate_black_pawn_moves","generate_knight_moves","generate_moves","generate_moves_for_piece","generate_white_pawn_attacks","generate_white_pawn_moves","into","king_attacks","knight_attacks","new","rook_attacks","to_owned","try_from","try_into","type_id","vzip","white_pawn_attacks","All","Black","BlackBishop","BlackKing","BlackKnight","BlackPawn","BlackQueen","BlackRook","Move","None","Scope","White","WhiteBishop","WhiteKing","WhiteKnight","WhitePawn","WhiteQueen","WhiteRook","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_algebraic","from_full_algebraic","from_san","get_dst","get_promotion","get_src","get_target","into","into","new","not","reverse","set_promotion","set_target","to_algebraic","to_owned","to_owned","to_range","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MoveIterator","MoveSet","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","contains","eq","equivalent","fmt","fmt","from","from","into","into","into_iter","into_iter","mov","new","next","piece","shift","src","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BlackBishop","BlackKing","BlackKnight","BlackPawn","BlackQueen","BlackRook","Marker","NoPiece","Piece","PieceType","SourceMarker","WhiteBishop","WhiteKing","WhiteKnight","WhitePawn","WhiteQueen","WhiteRook","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","from","from","from_i64","from_string","from_u64","get_square","get_type","into","into","is_black","is_white","new","not","to_char","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Black","Side","White","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","fmt","from","into","not","to_owned","try_from","try_into","type_id","vzip","Solver","best_move","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","new","to_owned","try_from","try_into","type_id","vzip","Square","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","from_algebraic","from_index","from_rank_file","get_file","get_index","get_rank","into","set_file","set_rank","to_algebraic","to_owned","try_from","try_into","type_id","vzip"],"q":["fchess","","","","","","","","","","","","","fchess::bitboard","","","","","","fchess::bitwise","","fchess::board","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fchess::book","","","","","","","","","","","","","","","","","","","","","","","","fchess::common","","","","","","","","","fchess::dumb7fill","fchess::move_generator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fchess::moves","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fchess::moveset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fchess::piece","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fchess::side","","","","","","","","","","","","","","","","","","","fchess::solver","","","","","","","","","","","","","","","","fchess::square","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,2,33,2,0,0,0,0,5,14,5,14,5,5,5,5,5,5,5,5,5,14,5,5,5,5,5,5,5,14,5,14,5,5,14,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,14,5,14,5,14,5,14,5,5,0,0,23,22,23,22,22,22,22,23,22,23,23,23,22,22,23,22,23,22,23,22,23,22,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,0,0,0,25,25,0,0,25,25,25,25,25,25,25,25,25,25,25,16,16,16,16,16,16,16,16,0,16,0,16,16,16,16,16,16,16,16,6,16,6,16,6,16,6,6,6,16,6,6,16,16,16,6,6,6,6,6,6,6,6,16,6,6,16,16,6,6,6,16,6,16,6,16,6,16,6,16,6,16,6,0,0,26,26,26,29,26,29,26,26,26,26,26,26,26,26,29,26,29,26,29,26,26,26,29,26,26,26,26,26,29,26,29,26,29,26,29,26,17,17,17,17,17,17,17,17,0,0,17,17,17,17,17,17,17,17,15,17,15,17,15,17,15,17,15,17,17,17,15,17,15,17,17,17,15,15,17,15,17,17,15,17,17,17,15,17,17,15,17,15,17,15,17,15,13,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[2,1],2],[[1,3],2],[[2,1,3],2],[4],[4],0,0,[[5,6],[[7,[5]]]],[[]],[[]],[[]],[[]],[5,8],[5,5],[[]],[[],5],[[5,5],8],[[],8],[[5,9],10],[[5,9],10],[[]],[[]],[[],5],[11,5],[5,[[7,[12]]]],[5,4],[5,4],[5,13],[[]],[[]],[[]],[5],[[],5],[14,[[7,[15]]]],[[5,16],3],[[5,12],[[7,[17]]]],[[[18,[15]],9],10],[[5,16],5],[[5,8]],[[5,8]],[[5,8]],[[5,8]],[[5,[7,[12]]]],[[5,4]],[[5,4]],[[5,12,17]],[[5,13]],[[]],[[],19],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],[[5,13],3],0,0,[[]],[[]],[[]],[[]],[22,22],[[]],[[22,9],10],[[]],[[]],[11,23],[[23,5],[[7,[6]]]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,[[2,2,24],2],0,[[25,5,15],26],[[25,17,12,3],26],[[25,17,12,3,3,[7,[12]]],26],[[]],[[]],[25,25],[[]],[[],25],[[25,9],10],[[]],[[],[[18,[3]]]],[[],[[18,[3]]]],[[],[[18,[3]]]],[[25,5],[[18,[26]]]],[[25,5,12],[[7,[26]]]],[[],[[18,[3]]]],[[],[[18,[3]]]],[[]],[[25,17,12,3],26],[[25,17,12,3],26],[[],25],[[25,17,12,3],26],[[]],[[],20],[[],20],[[],21],[[]],[[25,17,12,3,3,[7,[12]]],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[16,16],[6,6],[[]],[[]],[[6,6],8],[[],8],[[16,9],10],[[6,9],10],[[6,9],10],[13,16],[[]],[17,16],[[]],[11,[[7,[6]]]],[11,[[7,[6]]]],[[11,5],[[7,[6]]]],[6,12],[6,[[7,[17]]]],[6,12],[6,[[7,[12]]]],[[]],[[]],[[12,12],6],[16],[16,16],[[6,[7,[17]]]],[[6,[7,[12]]]],[6,19],[[]],[[]],[16,[[28,[27]]]],[[],19],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,[[26,26]],[[26,26]],[[26,26]],[[]],[[]],[[]],[[]],[26,26],[[]],[[26,6],8],[[26,26],8],[[],8],[[26,9],10],[[26,9],10],[[]],[[]],[[]],[[]],[[]],[26],0,[[12,17,3],26],[29,[[7,[6]]]],0,[[26,24],26],0,[[]],[[],19],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[17,17],[15,15],[[]],[[]],[[17,17],8],[[15,15],8],[[],8],[[17,9],10],[[17,9],10],[[15,9],10],[[]],[[]],[30,[[7,[17]]]],[31,[[7,[17]]]],[3,[[7,[17]]]],[15,12],[15,17],[[]],[[]],[17,8],[17,8],[[12,17],15],[17],[17,31],[[]],[[]],[[],19],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,0,[[]],[[]],[13,13],[[]],[[],13],[[13,13],8],[[],8],[[13,9],10],[[]],[[]],[13],[[]],[[],20],[[],20],[[],21],[[]],0,[[32,5],[[7,[6]]]],[[]],[[]],[32,32],[[]],[[],32],[[32,9],10],[[]],[[]],[[],32],[[]],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[12,12],[[]],[[12,12],8],[[],8],[[12,9],10],[[]],[11,[[7,[12]]]],[4,12],[[4,4],12],[12,4],[12,4],[12,4],[[]],[[12,4]],[[12,4]],[12,19],[[]],[[],20],[[],20],[[],21],[[]]],"p":[[6,"Shift"],[6,"Bitboard"],[15,"u64"],[15,"u8"],[3,"Board"],[3,"Move"],[4,"Option"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"Square"],[4,"Side"],[3,"BoardIterator"],[3,"Piece"],[4,"Scope"],[4,"PieceType"],[3,"Vec"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Entry"],[3,"Book"],[15,"i8"],[3,"MoveGenerator"],[3,"MoveSet"],[15,"usize"],[3,"Range"],[3,"MoveIterator"],[15,"i64"],[15,"char"],[3,"Solver"],[8,"BitboardExt"]]},\
"fen_diagram":{"doc":"","t":[5],"n":["main"],"q":["fen_diagram"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"test_move_generation":{"doc":"","t":[3,3,3,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,12,12,11,11,11,12,12,5,12,11,11,11,12,12,12,12,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["SuitResult","TestCase","TestResult","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","description","deserialize","expected_board","expected_fen","failed_tests","fmt","from","from","from","id","id","into","into","into","lan","lan","main","mov","new","new","push_test","result","result_board","san","san","serialize","start_fen","starting_board","successful_tests","tests","total_tests","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["test_move_generation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,8,11,3,8,11,3,11,3,3,11,3,8,3,8,11,3,11,3,8,11,3,11,3,0,11,8,11,8,11,11,11,3,3,3,11,8,8,8,8,11,3,8,11,3,8,11,3,8,11,3],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],2],0,[[],[[4,[3]]]],0,0,0,[[3,5],6],[[]],[[]],[[]],0,0,[[]],[[]],[[]],0,0,[[],7],0,[[],8],[[9,1,1,1,9,9,10],11],[[8,11]],0,0,0,0,[3,4],0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],12],[[],12],[[],12],[[]],[[]],[[]]],"p":[[3,"Board"],[15,"bool"],[3,"TestCase"],[4,"Result"],[3,"Formatter"],[6,"Result"],[6,"Result"],[3,"SuitResult"],[15,"str"],[3,"Move"],[3,"TestResult"],[3,"TypeId"]]},\
"uci":{"doc":"","t":[5],"n":["main"],"q":["uci"],"d":[""],"i":[0],"f":[[[],1]],"p":[[6,"Result"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
